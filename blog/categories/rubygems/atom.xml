<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: RubyGems | TOPI.CO]]></title>
  <link href="http://khua.github.com/blog/categories/rubygems/atom.xml" rel="self"/>
  <link href="http://khua.github.com/"/>
  <updated>2012-09-09T16:41:26+08:00</updated>
  <id>http://khua.github.com/</id>
  <author>
    <name><![CDATA[Kevin Hua]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[如何建立自己的Rubygems]]></title>
    <link href="http://khua.github.com/blog/2012/03/11/ru-he-jian-li-zi-ji-de-rubygems/"/>
    <updated>2012-03-11T18:37:00+08:00</updated>
    <id>http://khua.github.com/blog/2012/03/11/ru-he-jian-li-zi-ji-de-rubygems</id>
    <content type="html"><![CDATA[<h3>简单的示例：</h3>

<p>以创建topico-0.0.1.gem为例：</p>

<h4>建立文件夹</h4>

<p><code>
.
├── lib
│   └── topico.rb
└── topico.gemspec
</code></p>

<p>注意：lib目录下必须有个和你gem名字一样的rb文件。</p>

<!--more-->


<h4>编写代码 <code>lib\topico.rb</code></h4>

<p>```ruby
class Topico
  def self.hello</p>

<pre><code>puts "Hello, RubyGems!"
</code></pre>

<p>  end
end
```</p>

<h4>编辑GemSpec文件 <code>topico.gemspec</code></h4>

<p><code>ruby
Gem::Specification.new do |s|
  s.name        = 'topico'
  s.version     = '0.0.1'
  s.date        = '2012-03-11'
  s.summary     = 'Greeting from Topico'
  s.description = 'Topico shows a greeting to RubyGems'
  s.authors     = 'Author Name'
  s.email       = 'username@username.com'
  s.files       = ["lib/topico.rb"]
  s.homepage    = 'http://rubygems.org/gems/topico'
end
</code></p>

<p>这里仅列出了较为常见的属性。</p>

<h4>编译生成gem</h4>

<p><code>
$ gem build topico.gemspec
</code></p>

<p>系统会提示信息：</p>

<p><code>
  Successfully built RubyGem
  Name: topico
  Version: 0.0.1
  File: topico-0.0.1.gem
</code></p>

<p>编译后可以查看文件夹结构 <code>tree</code></p>

<p><code>
.
├── lib
│   └── topico.rb
├── topico-0.0.1.gem
└── topico.gemspec
</code></p>

<p>注意新生成的<code>topico-0.0.1.gem</code></p>

<h4>安装并测试gem</h4>

<p>安装topico-0.0.1.gem</p>

<p><code>
$ gem install ./topico-0.0.1.gem
</code></p>

<p>系统会提示：</p>

<p><code>
Successfully installed topico-0.0.1
1 gem installed
Installing ri documentation for topico-0.0.1...
Installing RDoc documentation for topico-0.0.1...
</code></p>

<p>在irb中测试使用 <code>irb</code>：</p>

<p><code>
irb(main):001:0&gt; require 'topico'
=&gt; true
irb(main):002:0&gt; Topico.hello
Hello, RubyGems!
=&gt; nil
</code></p>

<h4>发布到RugyGems网站</h4>

<p>先设置RubyGems的用户名和密码：</p>

<p>```
$ curl -u username https://rubygems.org/api/v1/api_key.yaml > ~/.gem/credentials
Enter host password for user 'username':
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</p>

<pre><code>                             Dload  Upload   Total   Spent    Left  Speed
</code></pre>

<p>  0    56    0    56    0     0     25      0 --:--:--  0:00:02 --:--:--   144
```</p>

<p>设置成功后发布：</p>

<p><code>
$ gem push topico-0.0.1.gem
Pushing gem to https://rubygems.org...
Successfully registered gem: topico (0.0.1)
</code></p>

<p>发布成功，这样大家都可以使用你的Rubygem啦。</p>

<h3>稍微复杂一些的示例</h3>

<p>下面看一下如何组织多个ruby文件。</p>

<h4>目录结构</h4>

<p><code>
.
├── lib
│   ├── ext
│   │   └── calculation.rb
│   └── topico.rb
└── topico.gemspec
</code></p>

<h4>编写GemSpec</h4>

<p>在<code>s.files</code>一行，修改：</p>

<p><code>
  s.files       = ["lib/topico.rb", "lib/ext/calculation.rb"]
</code></p>

<p>重新gem build即可。</p>

<h3>如何在Gem中包含可执行该件</h3>

<h4>在插件目录下，建立bin文件夹：</h4>

<p>生成可执行该件，并且将权限修改为可运行。</p>

<p><code>
$ mkdir bin
$ touch bin/greeting
$ chmod a+x bin/greeting
</code></p>

<h4>修改可执行文件内容</h4>

<p>```</p>

<h1>!/usr/bin/env ruby</h1>

<p>require 'topico'
puts Topico.hello
```</p>

<h4>修改GemSpec,添加一行<code>s.executables</code></h4>

<p><code>
  s.executables &lt;&lt; 'greeting'
</code></p>

<p>本文参考：<a href="http://blog.csdn.net/kucss/article/details/7163563">如何创建自己的Ruby Gem包</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[熟练使用RubyGems]]></title>
    <link href="http://khua.github.com/blog/2012/03/11/shou-lian-shi-yong-rubygems/"/>
    <updated>2012-03-11T16:01:00+08:00</updated>
    <id>http://khua.github.com/blog/2012/03/11/shou-lian-shi-yong-rubygems</id>
    <content type="html"><![CDATA[<p>RubyGems是Ruby的插件管理系统，可以轻松安装及管理Ruby函式库。可以在RubyGems上找到所有开源套件，另外，如果想找到Ruby或Rails有哪些好用的插件，也可以浏览看看<a href="https://www.ruby-toolbox.com/">The Ruby Toolbox</a>，会按照插件的热门程度排序。</p>

<h3>常见指令</h3>

<p><code>
gem -v 查看RubyGems的版本
gem update --system 升级RubyGems的版本
gem install gem_name 安装某个插件
gem install -v x.x.x gem_name 安装指定版本的插件
gem list 列出安装的套件
gem update gem_name 更新某个插件
gem update 更新所有的插件
gem uninstall gem_name 删除某个插件
</code></p>

<!--more-->


<p>另外，在安装插件时，系统会默认安装该插件的RDoc和ri文件，如果不希望安装这些该件，可在安装时使用<code>--no-ri --no-rdoc</code>参数：</p>

<p>```
gem install gem_name --no-ri --no-rdoc</p>

<p>```</p>

<p>也可以在用户目录<code>~</code>下，新建一个<code>.gemrc</code>文档，内容如下：</p>

<p><code>
gem: --no-ri --no-rdoc
</code></p>

<p>系统将默认不安装RDoc和ri文件。</p>

<h3>国内RubyGems镜像</h3>

<p>如果服务器在国内，安装所需的gems将是异常痛苦的体验，所幸的是，现在可以使用淘宝的镜像：</p>

<p><code>
$ gem sources --remove https://rubygems.org/
$ gem sources -a http://ruby.taobao.org/
$ gem sources -l
</code></p>

<p>如果显示：</p>

<p>```
<strong><em> CURRENT SOURCES </em></strong></p>

<p>http://ruby.taobao.org
```</p>

<p>就说明更改成功啦，你现在可以从国内镜像安装rugy gems啦。详细内容可参考 <a href="ruby.taobao.org">Rubygems镜像</a></p>

<p>如果使用<code>Bundler</code>管理Ruby Gems，可以修改Gemfile：</p>

<p>```
source 'http://ruby.taobao.org/'</p>

<p>gem 'rails', '3.2.2'
... ... ...
```</p>

<h3>建立和分享Ruby Gems</h3>

<p>根据官方的简介：</p>

<p><code>
gem update --system #Update to the latest RubyGems version
gem build foo.gemspec #Build your gem
gem push foo-1.0.0.gem #Deploy your gem instantly
</code></p>

<p>详请见后续文章：如何建立自己的Rubygem</p>

<h3>Top 50 Rubygems</h3>

<p><div><script src='https://gist.github.com/2015501.js?file='></script>
<noscript><pre><code>Count	Gem
7570	rack
7444	rake
7425	rails
7424	activesupport
7421	bundler
7412	actionpack
7410	actionmailer
7409	activerecord
7397	activeresource
7326	mime-types
7274	builder
6787	i18n
6547	rack-test
6527	tzinfo
6484	erubis
6447	treetop
6433	polyglot
6386	mail
6340	thor
6269	railties
6268	rack-mount
6266	activemodel
6261	arel
5958	abstract
5274	will_paginate
4935	newrelic_rpm
4597	nokogiri
4458	haml
4222	json
3703	bcrypt-ruby
3389	paperclip
3372	daemons
3335	warden
3330	devise
3224	aws-s3
2939	xml-simple
2931	hoptoad_notifier
2834	rest-client
2501	multi_json
2482	jquery-rails
2464	addressable
2392	fastercsv
2377	delayed_job
2343	oauth
2255	crack
2189	authlogic
2168	net-ssh
2161	pg
2090	orm_adapter
2036	rdoc</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
