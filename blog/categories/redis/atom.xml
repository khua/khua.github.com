<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Redis | TOPI.CO]]></title>
  <link href="http://khua.github.com/blog/categories/redis/atom.xml" rel="self"/>
  <link href="http://khua.github.com/"/>
  <updated>2012-09-09T15:51:10+08:00</updated>
  <id>http://khua.github.com/</id>
  <author>
    <name><![CDATA[Kevin Hua]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[安装Redis，并设置自动启动]]></title>
    <link href="http://khua.github.com/blog/2012/09/09/an-zhuang-redis%2Cbing-she-zhi-zi-dong-qi-dong/"/>
    <updated>2012-09-09T14:45:00+08:00</updated>
    <id>http://khua.github.com/blog/2012/09/09/an-zhuang-redis,bing-she-zhi-zi-dong-qi-dong</id>
    <content type="html"><![CDATA[<h3>安装Redis</h3>

<h4>(1) 下载Redis</h4>

<p><code>
wget http://redis.googlecode.com/files/redis-2.2.11.tar.gz
tar xzvf redis-2.2.11.tar.gz
</code></p>

<h4>(2) 编译并安装Redis</h4>

<p><code>
make &amp;&amp; make install
</code></p>

<h4>(3) 复制并修改配置文件</h4>

<p><code>
cp redis.conf /etc/redis.conf
vi /etc/redis.conf
</code></p>

<p>注意修改以下几项：</p>

<!--more-->


<p><code>
daemonize yes
loglevel warning
logfile /var/log/redis.log
maxmemory 2GB
</code></p>

<p>(自行斟酌是不要开通Virtual Memory选项)</p>

<h4>(4) 设置Redis-Server自动启动服务</h4>

<p>上网下载启动脚本(<code>gist.github.com</code>，搜索<code>redis init.d</code>)，并简单修改</p>

<p>(至少需要修改<code>redis</code>、<code>REDIS_CONF_FILE</code>)</p>

<p><code>
vi /etc/init.d/redisctl
chmod 755 redisctl
cp /etc/init.d/redisctl /etc/rc.d/init.d/redisctl \
&amp;&amp; ln -s /etc/init.d/redisctl /etc/rc.d/rc2.d/S90redisctl &amp;&amp; ln -s /etc/init.d/redisctl /etc/rc.d/rc3.d/S90redisctl \
&amp;&amp; ln -s /etc/init.d/redisctl /etc/rc.d/rc4.d/S90redisctl &amp;&amp; ln -s /etc/init.d/mongod /etc/rc.d/rc5.d/S90redisctl
chkconfig --add redisctl
</code></p>

<p>(5) 重新启动后可以测试redis-server是否正常启动</p>

<p><code>
redis-cli set foo Bar
redis-cli get foo
</code></p>

<h3>Redis自动启动脚本 (CentOS 5.6适用)</h3>

<p><div><script src='https://gist.github.com/3683015.js?file='></script>
<noscript><pre><code>#!/bin/sh
#
# redis - this script starts and stops the redis-server daemon
#
# chkconfig:   2345 90 10 
# description:  Redis is a persistent key-value database
# processname: redis-server
# config:      /etc/redis.conf
# config:      /etc/sysconfig/redis
# pidfile:     /var/run/redis.pid

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ &quot;$NETWORKING&quot; = &quot;no&quot; ] &amp;&amp; exit 0

redis=&quot;/usr/local/bin/redis-server&quot;
prog=$(basename $redis)

REDIS_CONF_FILE=&quot;/etc/redis.conf&quot;

[ -f /etc/sysconfig/redis ] &amp;&amp; . /etc/sysconfig/redis

lockfile=/var/lock/subsys/redis

start() {
    [ -x $redis ] || exit 5
    [ -f $REDIS_CONF_FILE ] || exit 6
    echo -n $&quot;Starting $prog: &quot;
    daemon $redis $REDIS_CONF_FILE
    retval=$?
    echo
    [ $retval -eq 0 ] &amp;&amp; touch $lockfile
    return $retval
}

stop() {
    echo -n $&quot;Stopping $prog: &quot;
    killproc $prog -QUIT
    retval=$?
    echo
    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    echo -n $&quot;Reloading $prog: &quot;
    killproc $redis -HUP
    RETVAL=$?
    echo
}

force_reload() {
    restart
}

rh_status() {
    status $prog
}

rh_status_q() {
    rh_status &gt;/dev/null 2&gt;&amp;1
}

case &quot;$1&quot; in
    start)
        rh_status_q &amp;&amp; exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart|configtest)
        $1
    retval=$?
    echo
    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    echo -n $&quot;Reloading $prog: &quot;
    killproc $redis -HUP
    RETVAL=$?
    echo
}

force_reload() {
    restart
}

rh_status() {
    status $prog
}

rh_status_q() {
    rh_status &gt;/dev/null 2&gt;&amp;1
}

case &quot;$1&quot; in
    start)
        rh_status_q &amp;&amp; exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart|configtest)
        $1
    retval=$?
    echo
    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    echo -n $&quot;Reloading $prog: &quot;
    killproc $redis -HUP
    RETVAL=$?
    echo
}

force_reload() {
    restart
}

rh_status() {
    status $prog
}

rh_status_q() {
    rh_status &gt;/dev/null 2&gt;&amp;1
}

case &quot;$1&quot; in
    start)
        rh_status_q &amp;&amp; exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart|configtest)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
            ;;
    *)
        echo $&quot;Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}&quot;
        exit 2
esac</code></pre></noscript></div>
</p>

<h3>Redis自动启动脚本 (Ubuntu 10.04适用)</h3>

<p>记得修改：</p>

<p>(1) <code>—chuid group:user</code></p>

<p>(2) <code>ln /etc/init.d/redisctl /etc/rc2.d/redisctl，重复rc3，rc4，rc5</code></p>

<p>启动脚本：</p>

<p><div><script src='https://gist.github.com/3683021.js?file='></script>
<noscript><pre><code>#! /bin/sh
### BEGIN INIT INFO
# Provides:             redis-server
# Required-Start:       $syslog
# Required-Stop:        $syslog
# Should-Start:         $local_fs
# Should-Stop:          $local_fs
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    redis-server - Persistent key-value db
# Description:          redis-server - Persistent key-value db
### END INIT INFO

DAEMON=/usr/local/bin/redis-server
DAEMON_ARGS=/etc/redis.conf
NAME=redis-server
DESC=redis-server
PIDFILE=/var/run/redis.pid
test -x $DAEMON || exit 0
test -x $DAEMONBOOTSTRAP || exit 0
set -e
case &quot;$1&quot; in
  start)
        echo -n &quot;Starting $DESC: &quot;
        touch $PIDFILE
        # chown redis:redis $PIDFILE
        if start-stop-daemon —start —quiet —umask 007 —pidfile $PIDFILE —chuid redis:redis —exec $DAEMON — $DAEMON_ARGS
        then
                echo &quot;$NAME.&quot;
        else
                echo &quot;failed&quot;
        fi
        ;;
  stop)
        echo -n &quot;Stopping $DESC: &quot;
        if start-stop-daemon —stop —retry 10 —quiet —oknodo —pidfile $PIDFILE —exec $DAEMON
        then
                echo &quot;$NAME.&quot;
        else
                echo &quot;failed&quot;
        fi
        rm -f $PIDFILE
        ;;
  restart|force-reload)
        ${0} stop
        ${0} start
        ;;
  *)
        echo &quot;Usage: /etc/init.d/$NAME {start|stop|restart|force-reload}&quot; &gt;&amp;2
        exit 1
        ;;
esac
exit 0</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
