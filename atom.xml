<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[TOPI.CO]]></title>
  <link href="http://khua.github.com/atom.xml" rel="self"/>
  <link href="http://khua.github.com/"/>
  <updated>2012-09-09T17:24:49+08:00</updated>
  <id>http://khua.github.com/</id>
  <author>
    <name><![CDATA[Kevin Hua]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[编辑器大作战——Sublime Text 2]]></title>
    <link href="http://khua.github.com/blog/2012/09/09/bian-ji-qi-da-zuo-zhan-sublime-text-2/"/>
    <updated>2012-09-09T16:33:00+08:00</updated>
    <id>http://khua.github.com/blog/2012/09/09/bian-ji-qi-da-zuo-zhan-sublime-text-2</id>
    <content type="html"><![CDATA[<p>推荐Lucifr和JerryQu的几篇博文：</p>

<p><a href="http://lucifr.com/139225/sublime-text-2-tricks-and-tips/">Sublime Text 2 入门及技巧</a></p>

<p><a href="http://lucifr.com/139235/sublime-text-2-useful-shortcuts/">Sublime Text 2 实用快捷键</a></p>

<p><a href="http://www.imququ.com/post/i_love_sublime-text-2.html">Sublime Text2：超赞的现代编辑器</a></p>

<p><a href="http://www.qianduan.net/essential-to-sublime-the-text-2-plugins.html">一些必不可少的Sublime Text 2插件</a></p>

<p>下面还有几篇博文：</p>

<p>(1) <a href="http://ihacklog.com/software/development-tool/sublime-text-2-tips-and-tricks.html#toc-E4.BD.BF.E7.94.A8Command-Palette">Sublime Text 2 小技巧和小诀窍</a></p>

<p>Key Points:</p>

<p>快如闪电查找文件：<code>Ctrl + P</code></p>

<p>方法查找或行定位(用在Ctrl + P后)：<code>@ / # /</code></p>

<p>快捷命令板：<code>Ctrl + Shift + P</code></p>

<p>控制台：Ctrl + `</p>

<p>包控制：<code>Package Control</code></p>

<p>快速代码书写：<code>Zen Coding</code></p>

<p>对齐(<code>Ctrl + Alt + A</code>)：<code>Alignment</code></p>

<p>无干扰编辑：<code>Shift + F11</code></p>

<!--more-->


<p>(2) <a href="http://lucifr.com/139225/sublime-text-2-tricks-and-tips/?replytocom=122286#icon">Sublime Text 2 入门及技巧 (该博文编排较为美观)</a></p>

<p>(前面文章叙述过的，不再重复)</p>

<p>多重选择：(按着CTRL不放)</p>

<p>缩进指示：(已集成至Sublime Text 2)</p>

<p>Vim Vintage模式：快捷命令板，选择Preferences: Settings - User，然后加入：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"ignored_packages": [],
</span><span class='line'>"vintage_start_in_command_mode": true</span></code></pre></td></tr></table></div></figure>


<p>支持一些 TextMate 的 Bundle，可以直接移植过来。</p>

<p>命令行工具</p>

<p>(3) <a href="http://hhuai.github.com/blog/2012/01/08/sublime-text-intro/">Sublime Text2 快速上手</a></p>

<p>装上Textmate中那个酷酷的[RailsCast主题]</p>

<p>(4) <a href="http://www.cnblogs.com/yingzi/archive/2012/04/24/2469056.html">sublime 使用技巧总结</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[改造你的 Gedit，轻松打造类 TextMate 编辑器]]></title>
    <link href="http://khua.github.com/blog/2012/09/09/gai-zao-ni-de-gedit%2Cqing-song-da-zao-lei-textmate-bian-ji-qi/"/>
    <updated>2012-09-09T16:23:00+08:00</updated>
    <id>http://khua.github.com/blog/2012/09/09/gai-zao-ni-de-gedit,qing-song-da-zao-lei-textmate-bian-ji-qi</id>
    <content type="html"><![CDATA[<p>Gedit，Ubuntu下默认文本编辑器，通过轻松改造，即可实现TextMate样编辑器：</p>

<h1>1 :  安装gedit插件</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install gedit-plugins</span></code></pre></td></tr></table></div></figure>


<h1>2 : 下载并安装TextMate 字体</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ~
</span><span class='line'>wget  http://www.gringod.com/wp-upload/MONACO.TTF
</span><span class='line'>mv MONACO.TTF monaco.ttf
</span><span class='line'>cp monaco.ttf /usr/share/fonts/truetype/
</span><span class='line'>fc-cache -f -v</span></code></pre></td></tr></table></div></figure>


<h1>3 :安装代码颜色方案 (Syntax Color Scheme)</h1>

<p>下载方案：http://grigio.org/files/darkmate.xml</p>

<p>打开gedit，选择<code>Edit -&gt; Preferences -&gt; Font &amp; Colors</code>，然后添加。</p>

<!--more-->


<h1>4 :安装文件浏览器插件</h1>

<p>下载插件工：http://www.stambouliote.de/download/gedit_classbrowser-0.2.1.tar.gz</p>

<p>解压，并放在<code>usr\gedit-2\plugins</code>目录下</p>

<p>打开gedit，选择<code>Edit-&gt;Preferences-&gt;Plugins</code>，选中需激活的插件即可。</p>

<p>进一步，还可以安装gedit-gmate，详见原文：</p>

<p><strong>gedit plugins for Ruby on Rails</strong>
http://blog.sudobits.com/2012/03/11/gedit-plugins-for-ruby-on-rails/</p>

<p>改造后效果如下图：</p>

<p><img src="http://khua.github.com/images/gedit.png" width="680" height="382" title="[gedit]" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[博客新生]]></title>
    <link href="http://khua.github.com/blog/2012/09/09/bo-ke-xin-sheng/"/>
    <updated>2012-09-09T16:13:00+08:00</updated>
    <id>http://khua.github.com/blog/2012/09/09/bo-ke-xin-sheng</id>
    <content type="html"><![CDATA[<p>今年2月，用Octopress为自己搭建了一个博客。3月份的某天，因为不小心push错，懒得从头再来，就将一些文章上传到 Ruby-China。一是方便自己回顾，另外也方便跟我一样的初学者。</p>

<p>最近又有写博的冲动，重新享受 <code>rake new_post</code> 和 <code>rake gen_deploy</code> 的乐趣。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[采用Nginx和Passenger部署Rails应用]]></title>
    <link href="http://khua.github.com/blog/2012/03/19/cai-yong-nginxhe-passengerbu-shu-railsying-yong/"/>
    <updated>2012-03-19T23:50:00+08:00</updated>
    <id>http://khua.github.com/blog/2012/03/19/cai-yong-nginxhe-passengerbu-shu-railsying-yong</id>
    <content type="html"><![CDATA[<p>使用Nginx和Passenger组合，部署Rails应用程序，是不个不错的选择。</p>

<p>为了使安装速度提高，可以使用<a href="http://ruby.taobao.org">淘宝镜像</a>作为Rubygems的源。</p>

<p>Ubuntu系统下，需要先安装PCRE:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">libpcre3</span> <span class="n">libpcre3</span><span class="o">-</span><span class="n">dev</span>
</span></code></pre></td></tr></table></div></figure>


<p>步骤如下：</p>

<h3>(1) gem install passenger</h3>

<h3>(2) passenger-install-nginx-module</h3>

<h3>(3) 设置Nginx的配置文件</h3>

<p>比较关键的设置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">user</span> <span class="n">www</span><span class="o">-</span><span class="n">data</span> <span class="c1">#即应用程序文件夹的所有者</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#设置主Server，也可以选择使用vhost server</span>
</span><span class='line'><span class="n">server</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">listen</span>       <span class="mi">80</span><span class="p">;</span>
</span><span class='line'>  <span class="n">server_name</span>  <span class="n">localhost</span><span class="p">;</span>
</span><span class='line'>  <span class="n">root</span>     <span class="sr">/path/</span><span class="n">to</span><span class="o">/</span><span class="n">your</span><span class="o">/</span><span class="n">rails_app</span><span class="o">/</span><span class="kp">public</span><span class="p">;</span>
</span><span class='line'>  <span class="n">passenger_enabled</span>    <span class="n">on</span><span class="p">;</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#注释掉location / {... ...}这个block</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Nginxd自动启动脚本 (init.d) —— CentOS适用</h3>

<div><script src='https://gist.github.com/3683271.js?file='></script>
<noscript><pre><code>#!/bin/bash
# v.0.0.1
# create by jackbillow at 2007.10.15
# nginx - This shell script takes care of starting and stopping nginx.
#
# chkconfig: 35 60 50
# description: nginx [engine x] is light http web/proxy server
# that answers incoming ftp service requests.
# processname: nginx
# config: /usr/local/nginx/conf/nginx.conf
nginx_path=&quot;/usr/local/nginx&quot;
nginx_pid=&quot;/usr/local/nginx/logs/nginx.pid&quot;
# Source function library.
. /etc/rc.d/init.d/functions
# Source networking configuration.
. /etc/sysconfig/network
# Check that networking is up.
[ ${NETWORKING} = &quot;no&quot; ] &amp;&amp; exit 0
[ -x $nginx_path/sbin/nginx ] || exit 0
RETVAL=0
prog=&quot;nginx&quot;
start() {
# Start daemons.
if [ -e $nginx_pid -a ! -z $nginx_pid ];then
echo &quot;nginx already running...&quot;
exit 1
fi

if [ -e /usr/local/nginx/conf/nginx.conf ];then
  echo -n $&quot;Starting $prog: &quot;
  $nginx_path/sbin/nginx -c /usr/local/nginx/conf/nginx.conf &amp;
  RETVAL=$?
[ $RETVAL -eq 0 ] &amp;&amp; {
touch /var/lock/subsys/$prog
success $&quot;$prog&quot;
}
echo
else
RETVAL=1
fi
return $RETVAL
}
# Stop daemons.
stop() {
        echo -n $&quot;Stopping $prog: &quot;
        killproc -d 10 $nigx_path/sbin/nginx
        RETVAL=$?
        echo
        [ $RETVAL = 0 ] &amp;&amp; rm -f $nginx_pid /var/lock/subsys/$prog
}
# See how we were called.
case &quot;$1&quot; in
start)
        start
        ;;
stop)
        stop
        ;;
reconfigure)
        stop
        start
        ;;
status)
        status $prog
        RETVAL=$?
        ;;
*)
        echo $&quot;Usage: $0 {start|stop|reconfigure|status}&quot;
        exit 1
esac
exit $RETVAL</code></pre></noscript></div>


<h3>Nginx自动启动脚本 (init.d) —— Ubuntu适用</h3>

<div><script src='https://gist.github.com/3683273.js?file='></script>
<noscript><pre><code>#! /bin/sh
### BEGIN INIT INFO
# Provides:          nginx
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the nginx web server
# Description:       starts nginx using start-stop-daemon
### END INIT INFO
PATH=/usr/local/nginx/sbin:$PATH
DAEMON=/usr/local/nginx/sbin/nginx
NAME=nginx
DESC=nginx
test -x $DAEMON || exit 0
# Include nginx defaults if available
if [ -f /etc/default/nginx ] ; then
    . /etc/default/nginx
fi
set -e
. /lib/lsb/init-functions
case &quot;$1&quot; in
  start)
    echo -n &quot;Starting $DESC: &quot;
    start-stop-daemon --start --quiet --pidfile /var/log/$NAME.pid \
        --exec $DAEMON -- $DAEMON_OPTS || true
    echo &quot;$NAME.&quot;
    ;;
  stop)
    echo -n &quot;Stopping $DESC: &quot;
    start-stop-daemon --stop --quiet --pidfile /var/log/$NAME.pid \
        --exec $DAEMON || true
    echo &quot;$NAME.&quot;
    ;;
  restart|force-reload)
    echo -n &quot;Restarting $DESC: &quot;
    start-stop-daemon --stop --quiet --pidfile \
        /var/log/$NAME.pid --exec $DAEMON || true
    sleep 1
    start-stop-daemon --start --quiet --pidfile \
        /var/log/$NAME.pid --exec $DAEMON -- $DAEMON_OPTS || true
    echo &quot;$NAME.&quot;
    ;;
  reload)
      echo -n &quot;Reloading $DESC configuration: &quot;
      start-stop-daemon --stop --signal HUP --quiet --pidfile /var/log/$NAME.pid \
          --exec $DAEMON || true
      echo &quot;$NAME.&quot;
      ;;
  status)
      status_of_proc -p /var/log/$NAME.pid &quot;$DAEMON&quot; nginx &amp;&amp; exit 0 || exit $?
      ;;
  *)
    N=/etc/init.d/$NAME
    echo &quot;Usage: $N {start|stop|restart|reload|force-reload|status}&quot; &gt;&amp;2
    exit 1
    ;;
esac
exit 0</code></pre></noscript></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装Redis，并设置自动启动]]></title>
    <link href="http://khua.github.com/blog/2012/03/19/an-zhuang-redis%2Cbing-she-zhi-zi-dong-qi-dong/"/>
    <updated>2012-03-19T22:16:00+08:00</updated>
    <id>http://khua.github.com/blog/2012/03/19/an-zhuang-redis,bing-she-zhi-zi-dong-qi-dong</id>
    <content type="html"><![CDATA[<h3>安装Redis</h3>

<h4>(1) 下载Redis</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget http://redis.googlecode.com/files/redis-2.2.11.tar.gz
</span><span class='line'>tar xzvf redis-2.2.11.tar.gz</span></code></pre></td></tr></table></div></figure>


<h4>(2) 编译并安装Redis</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>make && make install</span></code></pre></td></tr></table></div></figure>


<h4>(3) 复制并修改配置文件</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp redis.conf /etc/redis.conf
</span><span class='line'>vi /etc/redis.conf</span></code></pre></td></tr></table></div></figure>


<p>注意修改以下几项：</p>

<!--more-->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>daemonize yes
</span><span class='line'>loglevel warning
</span><span class='line'>logfile /var/log/redis.log
</span><span class='line'>maxmemory 2GB</span></code></pre></td></tr></table></div></figure>


<p>(自行斟酌是不要开通Virtual Memory选项)</p>

<h4>(4) 设置Redis-Server自动启动服务</h4>

<p>上网下载启动脚本(<code>gist.github.com</code>，搜索<code>redis init.d</code>)，并简单修改</p>

<p>(至少需要修改<code>redis</code>、<code>REDIS_CONF_FILE</code>)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi /etc/init.d/redisctl
</span><span class='line'>chmod 755 redisctl
</span><span class='line'>cp /etc/init.d/redisctl /etc/rc.d/init.d/redisctl \
</span><span class='line'>&& ln -s /etc/init.d/redisctl /etc/rc.d/rc2.d/S90redisctl && ln -s /etc/init.d/redisctl /etc/rc.d/rc3.d/S90redisctl \
</span><span class='line'>&& ln -s /etc/init.d/redisctl /etc/rc.d/rc4.d/S90redisctl && ln -s /etc/init.d/mongod /etc/rc.d/rc5.d/S90redisctl
</span><span class='line'>chkconfig --add redisctl</span></code></pre></td></tr></table></div></figure>


<p>(5) 重新启动后可以测试redis-server是否正常启动</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>redis-cli set foo Bar
</span><span class='line'>redis-cli get foo</span></code></pre></td></tr></table></div></figure>


<h3>Redis自动启动脚本 (CentOS 5.6适用)</h3>

<div><script src='https://gist.github.com/3683015.js?file='></script>
<noscript><pre><code>#!/bin/sh
#
# redis - this script starts and stops the redis-server daemon
#
# chkconfig:   2345 90 10 
# description:  Redis is a persistent key-value database
# processname: redis-server
# config:      /etc/redis.conf
# config:      /etc/sysconfig/redis
# pidfile:     /var/run/redis.pid

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ &quot;$NETWORKING&quot; = &quot;no&quot; ] &amp;&amp; exit 0

redis=&quot;/usr/local/bin/redis-server&quot;
prog=$(basename $redis)

REDIS_CONF_FILE=&quot;/etc/redis.conf&quot;

[ -f /etc/sysconfig/redis ] &amp;&amp; . /etc/sysconfig/redis

lockfile=/var/lock/subsys/redis

start() {
    [ -x $redis ] || exit 5
    [ -f $REDIS_CONF_FILE ] || exit 6
    echo -n $&quot;Starting $prog: &quot;
    daemon $redis $REDIS_CONF_FILE
    retval=$?
    echo
    [ $retval -eq 0 ] &amp;&amp; touch $lockfile
    return $retval
}

stop() {
    echo -n $&quot;Stopping $prog: &quot;
    killproc $prog -QUIT
    retval=$?
    echo
    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    echo -n $&quot;Reloading $prog: &quot;
    killproc $redis -HUP
    RETVAL=$?
    echo
}

force_reload() {
    restart
}

rh_status() {
    status $prog
}

rh_status_q() {
    rh_status &gt;/dev/null 2&gt;&amp;1
}

case &quot;$1&quot; in
    start)
        rh_status_q &amp;&amp; exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart|configtest)
        $1
    retval=$?
    echo
    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    echo -n $&quot;Reloading $prog: &quot;
    killproc $redis -HUP
    RETVAL=$?
    echo
}

force_reload() {
    restart
}

rh_status() {
    status $prog
}

rh_status_q() {
    rh_status &gt;/dev/null 2&gt;&amp;1
}

case &quot;$1&quot; in
    start)
        rh_status_q &amp;&amp; exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart|configtest)
        $1
    retval=$?
    echo
    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    echo -n $&quot;Reloading $prog: &quot;
    killproc $redis -HUP
    RETVAL=$?
    echo
}

force_reload() {
    restart
}

rh_status() {
    status $prog
}

rh_status_q() {
    rh_status &gt;/dev/null 2&gt;&amp;1
}

case &quot;$1&quot; in
    start)
        rh_status_q &amp;&amp; exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart|configtest)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
            ;;
    *)
        echo $&quot;Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}&quot;
        exit 2
esac</code></pre></noscript></div>


<h3>Redis自动启动脚本 (Ubuntu 10.04适用)</h3>

<p>记得修改：</p>

<p>(1) <code>—chuid group:user</code></p>

<p>(2) <code>ln /etc/init.d/redisctl /etc/rc2.d/redisctl，重复rc3，rc4，rc5</code></p>

<p>启动脚本：</p>

<div><script src='https://gist.github.com/3683021.js?file='></script>
<noscript><pre><code>#! /bin/sh
### BEGIN INIT INFO
# Provides:             redis-server
# Required-Start:       $syslog
# Required-Stop:        $syslog
# Should-Start:         $local_fs
# Should-Stop:          $local_fs
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    redis-server - Persistent key-value db
# Description:          redis-server - Persistent key-value db
### END INIT INFO

DAEMON=/usr/local/bin/redis-server
DAEMON_ARGS=/etc/redis.conf
NAME=redis-server
DESC=redis-server
PIDFILE=/var/run/redis.pid
test -x $DAEMON || exit 0
test -x $DAEMONBOOTSTRAP || exit 0
set -e
case &quot;$1&quot; in
  start)
        echo -n &quot;Starting $DESC: &quot;
        touch $PIDFILE
        # chown redis:redis $PIDFILE
        if start-stop-daemon —start —quiet —umask 007 —pidfile $PIDFILE —chuid redis:redis —exec $DAEMON — $DAEMON_ARGS
        then
                echo &quot;$NAME.&quot;
        else
                echo &quot;failed&quot;
        fi
        ;;
  stop)
        echo -n &quot;Stopping $DESC: &quot;
        if start-stop-daemon —stop —retry 10 —quiet —oknodo —pidfile $PIDFILE —exec $DAEMON
        then
                echo &quot;$NAME.&quot;
        else
                echo &quot;failed&quot;
        fi
        rm -f $PIDFILE
        ;;
  restart|force-reload)
        ${0} stop
        ${0} start
        ;;
  *)
        echo &quot;Usage: /etc/init.d/$NAME {start|stop|restart|force-reload}&quot; &gt;&amp;2
        exit 1
        ;;
esac
exit 0</code></pre></noscript></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装mongodb，并设置自动启动]]></title>
    <link href="http://khua.github.com/blog/2012/03/19/an-zhuang-mongodb%2Cbing-she-zhi-zi-dong-qi-dong/"/>
    <updated>2012-03-19T22:03:00+08:00</updated>
    <id>http://khua.github.com/blog/2012/03/19/an-zhuang-mongodb,bing-she-zhi-zi-dong-qi-dong</id>
    <content type="html"><![CDATA[<h3>Ubuntu环境下安装</h3>

<p>Ubuntu环境下比较容易安装，可参考：</p>

<p><a href="http://www.mongodb.org/display/DOCS/Ubuntu+and+Debian+packages">Ubuntu and Debian packages</a></p>

<p>安装好后会自动配置。</p>

<h3>CentOS环境下安装</h3>

<h4>安装MongoDB</h4>

<h5>(1) 查看系统位数</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">getconf</span> <span class="no">LONG_BIT</span>
</span></code></pre></td></tr></table></div></figure>


<h5>(2) 编辑MongoDB的安装源</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">vi</span> <span class="sr">/etc/</span><span class="n">yum</span><span class="o">.</span><span class="n">repos</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="mi">10</span><span class="n">gen</span><span class="o">.</span><span class="n">repo</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<h5>(3) 粘贴以下内容</h5>

<p><strong>64位适用：</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">10</span><span class="n">gen</span><span class="o">]</span>
</span><span class='line'><span class="nb">name</span><span class="o">=</span><span class="mi">10</span><span class="n">gen</span> <span class="no">Repository</span>
</span><span class='line'><span class="n">baseurl</span><span class="o">=</span><span class="n">http</span><span class="ss">:/</span><span class="o">/</span><span class="n">downloads</span><span class="o">-</span><span class="n">distro</span><span class="o">.</span><span class="n">mongodb</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">repo</span><span class="o">/</span><span class="n">redhat</span><span class="o">/</span><span class="n">os</span><span class="o">/</span><span class="n">x86_64</span>
</span><span class='line'><span class="n">gpgcheck</span><span class="o">=</span><span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>32位适用：</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">10</span><span class="n">gen</span><span class="o">]</span>
</span><span class='line'><span class="nb">name</span><span class="o">=</span><span class="mi">10</span><span class="n">gen</span> <span class="no">Repository</span>
</span><span class='line'><span class="n">baseurl</span><span class="o">=</span><span class="n">http</span><span class="ss">:/</span><span class="o">/</span><span class="n">downloads</span><span class="o">-</span><span class="n">distro</span><span class="o">.</span><span class="n">mongodb</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">repo</span><span class="o">/</span><span class="n">redhat</span><span class="o">/</span><span class="n">os</span><span class="o">/</span><span class="n">i686</span>
</span><span class='line'><span class="n">gpgcheck</span><span class="o">=</span><span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<h5>(4) 安装mongo-10gen和mongo-10-gen-server</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">yum</span> <span class="n">install</span> <span class="n">mongo</span><span class="o">-</span><span class="mi">10</span><span class="n">gen</span> <span class="n">mongo</span><span class="o">-</span><span class="mi">10</span><span class="n">gen</span><span class="o">-</span><span class="n">server</span>
</span></code></pre></td></tr></table></div></figure>


<h5>(5) 设置mongoDB自动启动服务</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cp</span> <span class="sr">/etc/ini</span><span class="n">t</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="n">mongod</span> <span class="sr">/etc/</span><span class="n">rc</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="n">init</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="n">mongod</span>
</span><span class='line'><span class="n">ln</span> <span class="o">-</span><span class="n">s</span> <span class="sr">/etc/ini</span><span class="n">t</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="n">mongod</span> <span class="sr">/etc/</span><span class="n">rc</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="n">rc3</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="no">S25mongod</span> <span class="o">&amp;&amp;</span> <span class="n">ln</span> <span class="o">-</span><span class="n">s</span> <span class="sr">/etc/ini</span><span class="n">t</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="n">mongod</span> <span class="sr">/etc/</span><span class="n">rc</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="n">rc5</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="no">S25mongod</span>
</span><span class='line'><span class="n">chkconfig</span> <span class="err">—</span><span class="n">add</span> <span class="n">mongod</span>
</span></code></pre></td></tr></table></div></figure>


<h4>自动启动脚本</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/bin/bash</span>
</span><span class='line'><span class="c1"># mongod - Startup script for mongod</span>
</span><span class='line'><span class="c1"># chkconfig: 35 85 15</span>
</span><span class='line'><span class="c1"># description: Mongo is a scalable, document-oriented database.</span>
</span><span class='line'><span class="c1"># processname: mongod</span>
</span><span class='line'><span class="c1"># config: /etc/mongod.conf</span>
</span><span class='line'><span class="c1"># pidfile: /var/run/mongo/mongo.pid</span>
</span><span class='line'>
</span><span class='line'><span class="o">.</span> <span class="sr">/etc/</span><span class="n">rc</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="n">init</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="n">functions</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># things from mongod.conf get there by mongod reading it</span>
</span><span class='line'>
</span><span class='line'><span class="no">OPTIONS</span><span class="o">=</span><span class="s2">&quot; -f /etc/mongod.conf&quot;</span>
</span><span class='line'><span class="no">SYSCONFIG</span><span class="o">=</span><span class="s2">&quot;/etc/sysconfig/mongod&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">mongod</span><span class="o">=</span><span class="err">$</span><span class="p">{</span><span class="no">MONGOD</span><span class="o">-/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">mongod</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="no">MONGO_USER</span><span class="o">=</span><span class="n">mongod</span>
</span><span class='line'><span class="no">MONGO_GROUP</span><span class="o">=</span><span class="n">mongod</span>
</span><span class='line'><span class="o">.</span> <span class="s2">&quot;$SYSCONFIG&quot;</span> <span class="o">||</span> <span class="kp">true</span>
</span><span class='line'><span class="n">start</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">echo</span> <span class="o">-</span><span class="n">n</span> <span class="vg">$&quot;</span><span class="no">Starting</span> <span class="n">mongod</span><span class="p">:</span> <span class="s2">&quot;</span>
</span><span class='line'><span class="s2">  daemon —user &quot;</span><span class="vg">$MONGO_USER</span><span class="s2">&quot; $mongod $OPTIONS</span>
</span><span class='line'><span class="s2">  RETVAL=$?</span>
</span><span class='line'><span class="s2">  echo</span>
</span><span class='line'><span class="s2">  [ $RETVAL -eq 0 ] &amp;&amp; touch /var/lock/subsys/mongod</span>
</span><span class='line'><span class="s2">}</span>
</span><span class='line'>
</span><span class='line'><span class="s2">stop()</span>
</span><span class='line'><span class="s2">{</span>
</span><span class='line'><span class="s2">  echo -n $&quot;</span><span class="no">Stopping</span> <span class="n">mongod</span><span class="p">:</span> <span class="s2">&quot;</span>
</span><span class='line'><span class="s2">  killproc -p /var/lib/mongo/mongod.lock -t30 -TERM /usr/bin/mongod</span>
</span><span class='line'><span class="s2">  RETVAL=$?</span>
</span><span class='line'><span class="s2">  echo</span>
</span><span class='line'><span class="s2">  [ $RETVAL -eq 0 ] &amp;&amp; rm -f /var/lock/subsys/mongod</span>
</span><span class='line'><span class="s2">}</span>
</span><span class='line'>
</span><span class='line'><span class="s2">restart () {</span>
</span><span class='line'><span class="s2">        stop</span>
</span><span class='line'><span class="s2">        start</span>
</span><span class='line'><span class="s2">}</span>
</span><span class='line'>
</span><span class='line'><span class="s2">ulimit -n 12000</span>
</span><span class='line'><span class="s2">RETVAL=0</span>
</span><span class='line'>
</span><span class='line'><span class="s2">case &quot;</span><span class="vg">$1</span><span class="s2">&quot; in</span>
</span><span class='line'><span class="s2">  start)</span>
</span><span class='line'><span class="s2">    start</span>
</span><span class='line'><span class="s2">    ;;</span>
</span><span class='line'><span class="s2">  stop)</span>
</span><span class='line'><span class="s2">    stop</span>
</span><span class='line'><span class="s2">    ;;</span>
</span><span class='line'><span class="s2">  restart|reload|force-reload)</span>
</span><span class='line'><span class="s2">    restart</span>
</span><span class='line'><span class="s2">    ;;</span>
</span><span class='line'><span class="s2">  condrestart)</span>
</span><span class='line'><span class="s2">    [ -f /var/lock/subsys/mongod ] &amp;&amp; restart || :</span>
</span><span class='line'><span class="s2">    ;;</span>
</span><span class='line'><span class="s2">  status)</span>
</span><span class='line'><span class="s2">    status $mongod</span>
</span><span class='line'><span class="s2">    RETVAL=$?</span>
</span><span class='line'><span class="s2">    ;;</span>
</span><span class='line'><span class="s2">  *)</span>
</span><span class='line'><span class="s2">    echo &quot;</span><span class="no">Usage</span><span class="p">:</span> <span class="vg">$0</span> <span class="p">{</span><span class="n">start</span><span class="o">|</span><span class="n">stop</span><span class="o">|</span><span class="n">status</span><span class="o">|</span><span class="n">restart</span><span class="o">|</span><span class="n">reload</span><span class="o">|</span><span class="n">force</span><span class="o">-</span><span class="n">reload</span><span class="o">|</span><span class="n">condrestart</span><span class="p">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">    RETVAL=1</span>
</span><span class='line'><span class="s2">esac</span>
</span><span class='line'>
</span><span class='line'><span class="s2">exit $RETVAL</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails本地开发环境和远程部署环境搭建]]></title>
    <link href="http://khua.github.com/blog/2012/03/19/railsben-di-kai-fa-huan-jing-he-yuan-cheng-bu-shu-huan-jing-da-jian/"/>
    <updated>2012-03-19T20:54:00+08:00</updated>
    <id>http://khua.github.com/blog/2012/03/19/railsben-di-kai-fa-huan-jing-he-yuan-cheng-bu-shu-huan-jing-da-jian</id>
    <content type="html"><![CDATA[<p>前段时间测试及部署者也以及Ruby China源程序，本地开发环境选择Ubuntu 10.04.03 LTS *；远程部署环境选择CentOS 5.6 (AMD) 64-bit。</p>

<p>(* 为了支持新的硬件，升级到了<code>linux-header-2.6.32-38</code>，用<code>uname -r</code>查看，显示<code>3.0.0-997-generic</code>)</p>

<h3>一、基于CentOS 5.6的部署环境</h3>

<h4>1a. 设置远程登录</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh root@96.126.102.82</span></code></pre></td></tr></table></div></figure>


<p>Windows环境下，可以使用Putty进行远程连接，并通过修改<code>Apperance: Fixdays</code>及<code>Translation: UTF-8</code>，以正常显示中文。</p>

<h4>1b. 设置locale <code>vim /etc/profile</code>，添加：</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">export</span> <span class="no">LC_ALL</span> <span class="o">=</span> <span class="n">zh_CN</span><span class="o">.</span><span class="n">UTF8</span>
</span><span class='line'><span class="n">export</span> <span class="no">LANG</span> <span class="o">=</span> <span class="n">zh_CN</span><span class="o">.</span><span class="n">UTF8</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2. 安装一些基本包</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">yum</span> <span class="n">install</span> <span class="n">gcc</span> <span class="n">g</span><span class="o">++</span> <span class="n">gcc</span><span class="o">-</span><span class="n">c</span><span class="o">++</span> <span class="n">make</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<h4>3. 手动安装m4, automake, autoconf, libtool指定版本</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">m4</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">4</span><span class="o">.</span><span class="mi">13</span>
</span><span class='line'><span class="n">autoconf</span> <span class="o">&gt;=</span> <span class="mi">2</span><span class="o">.</span><span class="mi">65</span>
</span><span class='line'><span class="n">automake</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">11</span>
</span><span class='line'><span class="n">libtool</span> <span class="o">&gt;=</span> <span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">6</span><span class="n">b</span>
</span></code></pre></td></tr></table></div></figure>


<p>这一步是为了安装Coreseek (Sphinx)，可选。</p>

<h4>4. 安装其它一些编译依赖的软件包</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">yum</span> <span class="n">install</span> <span class="n">zlib</span><span class="o">-</span><span class="n">devel</span> <span class="n">openssl</span><span class="o">-</span><span class="n">devel</span> <span class="n">perl</span> <span class="n">cpio</span> <span class="n">expat</span><span class="o">-</span><span class="n">devel</span> <span class="n">gettext</span><span class="o">-</span><span class="n">devel</span> <span class="n">curl</span> <span class="n">curl</span><span class="o">-</span><span class="n">devel</span> <span class="n">imake</span> <span class="n">libxml2</span> <span class="n">libxml2</span><span class="o">-</span><span class="n">devel</span> <span class="n">libxslt</span> <span class="n">libxslt</span><span class="o">-</span><span class="n">devel</span>
</span></code></pre></td></tr></table></div></figure>


<h4>5. 安装版本控制系统git (可选择安装最新版本)</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">wget</span> <span class="n">http</span><span class="ss">:/</span><span class="o">/</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">pub</span><span class="o">/</span><span class="n">software</span><span class="o">/</span><span class="n">scm</span><span class="o">/</span><span class="n">git</span><span class="o">/</span><span class="n">git</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">7</span><span class="o">.</span><span class="mi">6</span><span class="o">.</span><span class="n">tar</span><span class="o">.</span><span class="n">gz</span>
</span><span class='line'><span class="n">tar</span> <span class="o">-</span><span class="n">xzvf</span> <span class="n">git</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">7</span><span class="o">.</span><span class="mi">6</span><span class="o">.</span><span class="n">tar</span><span class="o">.</span><span class="n">gz</span>
</span><span class='line'><span class="n">cd</span> <span class="n">git</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">7</span><span class="o">.</span><span class="mi">6</span>
</span><span class='line'><span class="o">.</span><span class="n">/configure</span> <span class="o">--</span><span class="n">prefix</span><span class="o">=</span><span class="sr">/usr/</span><span class="n">local</span>
</span><span class='line'><span class="n">make</span> <span class="o">&amp;&amp;</span> <span class="n">make</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<p>(后续步骤见第三部分)</p>

<h3>二、基于Ubuntu 10.04 LTS的本地环境</h3>

<h4>1.  设置locale <code>vim /etc/profile</code>，添加：</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">export</span> <span class="no">LC_ALL</span> <span class="o">=</span> <span class="n">zh_CN</span><span class="o">.</span><span class="n">UTF8</span>
</span><span class='line'><span class="n">export</span> <span class="no">LANG</span> <span class="o">=</span> <span class="n">zh_CN</span><span class="o">.</span><span class="n">UTF8</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2. 安装一些基本包</h4>

<p>(make已经默认安装，3.81版)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">gcc</span> <span class="n">g</span><span class="o">++</span>
</span></code></pre></td></tr></table></div></figure>


<h4>3. 手动安装m4, automake, autoconf, libtool指定版本</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">m4</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">4</span><span class="o">.</span><span class="mi">13</span>
</span><span class='line'><span class="n">autoconf</span> <span class="o">&gt;=</span> <span class="mi">2</span><span class="o">.</span><span class="mi">65</span>
</span><span class='line'><span class="n">automake</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">11</span>
</span><span class='line'><span class="n">libtool</span> <span class="o">&gt;=</span> <span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">6</span><span class="n">b</span>
</span></code></pre></td></tr></table></div></figure>


<p>这一步是为了安装Coreseek (Sphinx)，可选。</p>

<h4>4. 安装其它一些编译依赖的软件包</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">zlib1g</span><span class="o">-</span><span class="n">dev</span> <span class="n">libssl</span><span class="o">-</span><span class="n">dev</span> <span class="n">perl</span> <span class="n">cpio</span> <span class="n">libexpat1</span><span class="o">-</span><span class="n">dev</span> <span class="n">gettext</span> <span class="n">curl</span> <span class="n">libcurl4</span><span class="o">-</span><span class="n">gnutls</span><span class="o">-</span><span class="n">dev</span> <span class="n">xutils</span><span class="o">-</span><span class="n">dev</span> <span class="n">libxml2</span> <span class="n">libxml2</span><span class="o">-</span><span class="n">dev</span> <span class="n">libxslt11</span><span class="o">.</span><span class="mi">1</span> <span class="p">(</span><span class="sc">?)</span> <span class="n">libxslt</span><span class="o">-</span><span class="n">dev</span> <span class="n">libreadline5</span><span class="o">-</span><span class="n">dev</span> <span class="n">libyaml</span><span class="o">-</span><span class="mi">0</span><span class="o">-</span><span class="mi">2</span> <span class="n">libyaml</span><span class="o">-</span><span class="n">dev</span>
</span></code></pre></td></tr></table></div></figure>


<h4>5. 安装版本控制系统git (可选择安装最新版本)</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">git</span><span class="o">-</span><span class="n">core</span>
</span></code></pre></td></tr></table></div></figure>


<h3>通用安装部分 (Ruby, MongoDB, redis, Coreseek, NodeJS)</h3>

<h4>6. 安装Ruby 1.9.2 p290，并升级Rubygems</h4>

<p>详见后续文章：安装Ruby 1.9.3 p125</p>

<h4>7. 安装mongodb，并配置自动启动服务</h4>

<p>详见后续文章：安装mongodb，并配置自动启动服务</p>

<h4>8. 安装redis，并配置自动启动服务</h4>

<p>详见后续文章：安装mongodb，并配置自动启动服务</p>

<h4>9. 安装Coreseek 4.1 Beta</h4>

<p>可选，详见后续文章：安装Coreseek 4.1版</p>

<h4>10. 安装node.js，并使用npm管理安装</h4>

<p>详见：<a href="http://topi.co/blog/2012/09/09/an-zhuang-he-ce-shi-node-dot-js/">安装和测试Node.JS</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装和测试Node.js]]></title>
    <link href="http://khua.github.com/blog/2012/03/15/an-zhuang-he-ce-shi-node-dot-js/"/>
    <updated>2012-03-15T22:24:00+08:00</updated>
    <id>http://khua.github.com/blog/2012/03/15/an-zhuang-he-ce-shi-node-dot-js</id>
    <content type="html"><![CDATA[<h3>NodeJS，服务器端的JavaScript</h3>

<p><img src="http://khua.github.com/images/nodejs.png" width="245" height="66" title="[Node.js]" ></p>

<p>JavaScript 最早是运行在浏览器中,然而浏览器只是提供了一个上下文，它定义了使用 JavaScript 可以做什么,但并没有“说”太多关于 JavaScript 语言本身可以做什么。事实上, JavaScript 是一门“完整”的语言:它可以使用在不同的上下文中,其能力与其他同类语言相比有过之而无不及。</p>

<p>Node.js 事实上就是另外一种上下文,它允许在后端(脱离浏览器环境)运行 JavaScript 代码。要实现在后台运行 JavaScript 代码,代码需要先被解释然后正确的执行。Node.js 的原理正是如此,它使用了 <code>Google 的 V8 虚拟机</code>(Google 的 Chrome 浏览器使用的 JavaScript 执行环境),来解释和执行 JavaScript 代码。</p>

<p>除此之外,伴随着 Node.js 的还有许多有用的模块,它们可以简化很多重复的劳作,比如向终端输出字符串。因此,Node.js 事实上既是一个运行时环境,同时又是一个库。要使用 Node.js, 首先需要进行安装。</p>

<h3>安装Node.js</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget http://nodejs.org/dist/v0.6.12/node-v0.6.12.tar.gz
</span><span class='line'>tar xzvf node-v0.6.12.tar.gz
</span><span class='line'>cd node-v0.6.12
</span><span class='line'>./configure
</span><span class='line'>make && make install</span></code></pre></td></tr></table></div></figure>




<!--more-->


<h3>测试Node.js</h3>

<ul>
<li><p>查看node.js版本：<code>node -v</code></p></li>
<li><p>测试 Hello World Script for Node.js：</p></li>
</ul>


<p>vim helloworld.js</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/plain&#39;</span><span class="p">});</span>
</span><span class='line'>  <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s1">&#39;Hello World\n&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">}).</span><span class="nx">listen</span><span class="p">(</span><span class="mi">1229</span><span class="p">,</span> <span class="s1">&#39;127.0.0.1&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Server running at http://127.0.0.1:1229/&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>系统会提示：<code>Server running at http://127.0.0.1:1229/</code>，打开浏览器输入<code>127.0.0.1:1229</code>就可以查看效果啦。</p>

<ul>
<li>或从https://github.com/ry/node_chat下载示例</li>
</ul>


<h3>通过NPM安装forever或juggernaut</h3>

<ul>
<li>安装npm (如果权限不够，可以将<code>sh</code>改为<code>sudo sh</code>)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">curl</span> <span class="nx">http</span><span class="o">:</span><span class="c1">//npmjs.org/install.sh | sh</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>使用npm安装forever和juggernaut</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">npm</span> <span class="nx">install</span> <span class="nx">forever</span> <span class="o">-</span><span class="nx">g</span>
</span><span class='line'><span class="nx">npm</span> <span class="nx">install</span> <span class="nx">juggernaut</span> <span class="o">-</span><span class="nx">g</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>在Rails中使用juggernaut</li>
</ul>


<p>在Gemfile中加入：<code>gem juggernaut</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[REST，资源和Rails]]></title>
    <link href="http://khua.github.com/blog/2012/03/12/rest%2Czi-yuan-he-rails/"/>
    <updated>2012-03-12T21:39:00+08:00</updated>
    <id>http://khua.github.com/blog/2012/03/12/rest,zi-yuan-he-rails</id>
    <content type="html"><![CDATA[<p>具备表象状态迁移(Representational State Transfer, REST)或称为表象化状态迁移。它代表了分布式超媒体系统的体系结构风格，该风格中是Roy Fielding在论文中定义。REST在系统中加入一系列的限制，为确保极大的可扩展性。虽然REST定义了大量的重要体系结构限制(例如将用户接口和服务器实现的清晰分离、无状态、以及缓存能力)。REST关键的特有能力是统一接口的要求。REST接口是由HTTP接口定义的，支持GET/POST/PUT/DELETE。这种统一接口限制，跟面向服务的体系结构(Service-Oriented Architecture, SOA)相反，后者为每种类型的服务定义了不同的接口。</p>

<p>REST构架风格具有以下设计准则：</p>

<ul>
<li>网络上的所有事物都抽象为资源(resources = data + representation)</li>
<li>每个资源都对应一个唯一的资源标识(resources identifier = url)</li>
<li>通过连接器(generic connector interface)对资源进行操作(generic connector = HTTP Protocol 即GET/POST/PUT/DELETE)
＊ 对资源的各种操作不会改变资源标识(对资源的GET操作不改变资源的状态)</li>
<li>所有操作都是无状态的(stateless)</li>
</ul>


<!--more-->


<p>从Rails 1.2开始，Rails引入了完全REST化的API支持。路由(routes)实现了资源(resources)的概念，而representation(表象)则由respond_to方法实现。RESTful带给Rails最大的好处是：它帮助我们用一种比较标准化的方式来命名和组织Controllers和Actions。在没有RESTful之前，典型路由的设计是逐一指定Controller和Action。</p>

<p>将RESTful带入Rails路由系统的构思，出自它对应了HTTP动词# POST/GET/PUT/DELETE到数据的新增、读取、更新、删除等四项操作。原来的路由：</p>

<p><code>HTTP method：在HTTP1.1通信协义中定义了九种单词，分别是：HEAD/GET/POST/PUT/DELETE/TRACE/OPTIONS/CONNECT/PATCH</code></p>

<ul>
<li>/topics/create</li>
<li>/topics/show/id</li>
<li>/topics/update/id</li>
<li>/topics/destroy/id</li>
</ul>


<p>将会变成：</p>

<ul>
<li>POST /topics 对应到Controller中的creat action</li>
<li>GET /topics/id 对应到Controller中的show action</li>
<li>PUT /topics/id 对应到Controller中的update action</li>
<li>DELETE /topics/id 对应到Controller中的destroy action</li>
</ul>


<p>因此，Rails的路由设定很大程度上简化，只须在config/routes.rb中加入下行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>resources :topics</span></code></pre></td></tr></table></div></figure>


<p>如此，会自动创建4个命名路由(named routes)，搭配四个HTTP动词，对应在到七个Actions，它的实际作用，就如同以下的设定：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>get  '/topics'       =&gt; "topics#index",   :as =&gt; "topics"
</span><span class='line'>post  '/topics'       =&gt; "topics#create",  :as =&gt; "topics"
</span><span class='line'>get   '/topics/:id'   =&gt; "topics#show",    :as =&gt; "topic"
</span><span class='line'>put   '/topics/:id'   =&gt; "topics#update",  :as =&gt; "topic"
</span><span class='line'>delete    '/topics/:id'   =&gt; "topics#destroy",:as =&gt; "topic"
</span><span class='line'>get   '/topics/:id'   =&gt; "topics#new", :as =&gt; "new_topic"
</span><span class='line'>get   '/topics/:id/edit'  =&gt; "topics#edit",    :as =&gt; "edit_topic"</span></code></pre></td></tr></table></div></figure>


<p>可以参考下表：</p>

<table>
<tr>
<td>Helper</td>
<td>GET</td>
<td>POST</td>
<td>PUT</td>
<td>DELETE</td>
</tr>
<tr>
<td>topic_path(@topic)</td>
<td>/topics/id<br>topics#show</td>
<td></td>
<td>/topics/id<br>topics#update</td>
<td>/topics/id<br>topics#destroy</td>
</tr>
<tr>
<td>topics_path</td>
<td>/topics<br>topics#index</td>
<td>/topics<br>topics#create</td>
<td></td>
<td></td>
</tr>
<tr>
<td>edit_topic_path(@topic)</td>
<td>/topics/id/edit<br>topics#edit</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>new_topic_path</td>
<td>/topics/new<br>topics#new</td>
<td></td>
<td></td>
<td></td>
</tr>
</table>


<p>注意，这七个Action方法的名字是Rails约定好的，无法修改。因此，链接可以写成：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>link_to topic.name, topic_path(@topic)</span></code></pre></td></tr></table></div></figure>


<p>而不是写成：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>link_to topic.name, :controller =&gt; 'topics', :action =&gt; :show, :id =&gt; topic.id</span></code></pre></td></tr></table></div></figure>


<p>因此，只需记得资源(resources)，就可以写成URL Helper:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[custom route_]topic[s]_path(@topic), :method =&gt; GET | POST | PUT | DELETE</span></code></pre></td></tr></table></div></figure>


<p>注意，<em>path结尾对应相对网址，而</em>url结尾对应完整的网址(包含域名)。</p>

<p>本文参考：<a href="http://ihower.tw/rails3/restful.html">RESTful应用程式，Ruby on Rails实战圣经，iHower</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何建立自己的Rubygems]]></title>
    <link href="http://khua.github.com/blog/2012/03/11/ru-he-jian-li-zi-ji-de-rubygems/"/>
    <updated>2012-03-11T18:37:00+08:00</updated>
    <id>http://khua.github.com/blog/2012/03/11/ru-he-jian-li-zi-ji-de-rubygems</id>
    <content type="html"><![CDATA[<h3>简单的示例：</h3>

<p>以创建topico-0.0.1.gem为例：</p>

<h4>建立文件夹</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.
</span><span class='line'>├── lib
</span><span class='line'>│   └── topico.rb
</span><span class='line'>└── topico.gemspec</span></code></pre></td></tr></table></div></figure>


<p>注意：lib目录下必须有个和你gem名字一样的rb文件。</p>

<!--more-->


<h4>编写代码 <code>lib\topico.rb</code></h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Topico</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">hello</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Hello, RubyGems!&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>编辑GemSpec文件 <code>topico.gemspec</code></h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Gem</span><span class="o">::</span><span class="no">Specification</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">s</span><span class="o">|</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">name</span>        <span class="o">=</span> <span class="s1">&#39;topico&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">version</span>     <span class="o">=</span> <span class="s1">&#39;0.0.1&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">date</span>        <span class="o">=</span> <span class="s1">&#39;2012-03-11&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">summary</span>     <span class="o">=</span> <span class="s1">&#39;Greeting from Topico&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">description</span> <span class="o">=</span> <span class="s1">&#39;Topico shows a greeting to RubyGems&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">authors</span>     <span class="o">=</span> <span class="s1">&#39;Author Name&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">email</span>       <span class="o">=</span> <span class="s1">&#39;username@username.com&#39;</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">files</span>       <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;lib/topico.rb&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">homepage</span>    <span class="o">=</span> <span class="s1">&#39;http://rubygems.org/gems/topico&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里仅列出了较为常见的属性。</p>

<h4>编译生成gem</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">gem</span> <span class="n">build</span> <span class="n">topico</span><span class="o">.</span><span class="n">gemspec</span>
</span></code></pre></td></tr></table></div></figure>


<p>系统会提示信息：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="no">Successfully</span> <span class="n">built</span> <span class="no">RubyGem</span>
</span><span class='line'>  <span class="no">Name</span><span class="p">:</span> <span class="n">topico</span>
</span><span class='line'>  <span class="no">Version</span><span class="p">:</span> <span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span>
</span><span class='line'>  <span class="no">File</span><span class="p">:</span> <span class="n">topico</span><span class="o">-</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="n">gem</span>
</span></code></pre></td></tr></table></div></figure>


<p>编译后可以查看文件夹结构 <code>tree</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span>
</span><span class='line'><span class="err">├──</span> <span class="n">lib</span>
</span><span class='line'><span class="err">│</span>   <span class="err">└──</span> <span class="n">topico</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="err">├──</span> <span class="n">topico</span><span class="o">-</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="n">gem</span>
</span><span class='line'><span class="err">└──</span> <span class="n">topico</span><span class="o">.</span><span class="n">gemspec</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意新生成的<code>topico-0.0.1.gem</code></p>

<h4>安装并测试gem</h4>

<p>安装topico-0.0.1.gem</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">gem</span> <span class="n">install</span> <span class="o">.</span><span class="n">/topico</span><span class="o">-</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="n">gem</span>
</span></code></pre></td></tr></table></div></figure>


<p>系统会提示：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Successfully</span> <span class="n">installed</span> <span class="n">topico</span><span class="o">-</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span>
</span><span class='line'><span class="mi">1</span> <span class="n">gem</span> <span class="n">installed</span>
</span><span class='line'><span class="no">Installing</span> <span class="n">ri</span> <span class="n">documentation</span> <span class="k">for</span> <span class="n">topico</span><span class="o">-</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="no">Installing</span> <span class="no">RDoc</span> <span class="n">documentation</span> <span class="k">for</span> <span class="n">topico</span><span class="o">-</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>在irb中测试使用 <code>irb</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">001</span><span class="p">:</span><span class="mi">0</span><span class="o">&gt;</span> <span class="nb">require</span> <span class="s1">&#39;topico&#39;</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">002</span><span class="p">:</span><span class="mi">0</span><span class="o">&gt;</span> <span class="no">Topico</span><span class="o">.</span><span class="n">hello</span>
</span><span class='line'><span class="no">Hello</span><span class="p">,</span> <span class="no">RubyGems</span><span class="o">!</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="kp">nil</span>
</span></code></pre></td></tr></table></div></figure>


<h4>发布到RugyGems网站</h4>

<p>先设置RubyGems的用户名和密码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">curl</span> <span class="o">-</span><span class="n">u</span> <span class="n">username</span> <span class="n">https</span><span class="ss">:/</span><span class="o">/</span><span class="n">rubygems</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">api</span><span class="o">/</span><span class="n">v1</span><span class="o">/</span><span class="n">api_key</span><span class="o">.</span><span class="n">yaml</span> <span class="o">&gt;</span> <span class="o">~</span><span class="sr">/.gem/</span><span class="n">credentials</span>
</span><span class='line'><span class="no">Enter</span> <span class="n">host</span> <span class="n">password</span> <span class="k">for</span> <span class="n">user</span> <span class="s1">&#39;username&#39;</span><span class="p">:</span>
</span><span class='line'>  <span class="o">%</span> <span class="no">Total</span>    <span class="o">%</span> <span class="no">Received</span> <span class="o">%</span> <span class="no">Xferd</span>  <span class="no">Average</span> <span class="no">Speed</span>   <span class="no">Time</span>    <span class="no">Time</span>     <span class="no">Time</span>  <span class="no">Current</span>
</span><span class='line'>                                 <span class="no">Dload</span>  <span class="no">Upload</span>   <span class="no">Total</span>   <span class="no">Spent</span>    <span class="no">Left</span>  <span class="no">Speed</span>
</span><span class='line'>  <span class="mi">0</span>    <span class="mi">56</span>    <span class="mi">0</span>    <span class="mi">56</span>    <span class="mi">0</span>     <span class="mi">0</span>     <span class="mi">25</span>      <span class="mi">0</span> <span class="o">--</span><span class="ss">:-</span><span class="o">-</span><span class="ss">:-</span><span class="o">-</span>  <span class="mi">0</span><span class="p">:</span><span class="mo">00</span><span class="p">:</span><span class="mo">02</span> <span class="o">--</span><span class="ss">:-</span><span class="o">-</span><span class="ss">:-</span><span class="o">-</span>   <span class="mi">144</span>
</span></code></pre></td></tr></table></div></figure>


<p>设置成功后发布：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">gem</span> <span class="n">push</span> <span class="n">topico</span><span class="o">-</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="n">gem</span>
</span><span class='line'><span class="no">Pushing</span> <span class="n">gem</span> <span class="n">to</span> <span class="n">https</span><span class="ss">:/</span><span class="o">/</span><span class="n">rubygems</span><span class="o">.</span><span class="n">org</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="no">Successfully</span> <span class="n">registered</span> <span class="n">gem</span><span class="p">:</span> <span class="n">topico</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>发布成功，这样大家都可以使用你的Rubygem啦。</p>

<h3>稍微复杂一些的示例</h3>

<p>下面看一下如何组织多个ruby文件。</p>

<h4>目录结构</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span>
</span><span class='line'><span class="err">├──</span> <span class="n">lib</span>
</span><span class='line'><span class="err">│</span>   <span class="err">├──</span> <span class="n">ext</span>
</span><span class='line'><span class="err">│</span>   <span class="err">│</span>   <span class="err">└──</span> <span class="n">calculation</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="err">│</span>   <span class="err">└──</span> <span class="n">topico</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="err">└──</span> <span class="n">topico</span><span class="o">.</span><span class="n">gemspec</span>
</span></code></pre></td></tr></table></div></figure>


<h4>编写GemSpec</h4>

<p>在<code>s.files</code>一行，修改：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">files</span>       <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;lib/topico.rb&quot;</span><span class="p">,</span> <span class="s2">&quot;lib/ext/calculation.rb&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>重新gem build即可。</p>

<h3>如何在Gem中包含可执行该件</h3>

<h4>在插件目录下，建立bin文件夹：</h4>

<p>生成可执行该件，并且将权限修改为可运行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">mkdir</span> <span class="n">bin</span>
</span><span class='line'><span class="err">$</span> <span class="n">touch</span> <span class="n">bin</span><span class="o">/</span><span class="n">greeting</span>
</span><span class='line'><span class="err">$</span> <span class="n">chmod</span> <span class="n">a</span><span class="o">+</span><span class="n">x</span> <span class="n">bin</span><span class="o">/</span><span class="n">greeting</span>
</span></code></pre></td></tr></table></div></figure>


<h4>修改可执行文件内容</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;topico&#39;</span>
</span><span class='line'><span class="nb">puts</span> <span class="no">Topico</span><span class="o">.</span><span class="n">hello</span>
</span></code></pre></td></tr></table></div></figure>


<h4>修改GemSpec,添加一行<code>s.executables</code></h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">executables</span> <span class="o">&lt;&lt;</span> <span class="s1">&#39;greeting&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>本文参考：<a href="http://blog.csdn.net/kucss/article/details/7163563">如何创建自己的Ruby Gem包</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[熟练使用RubyGems]]></title>
    <link href="http://khua.github.com/blog/2012/03/11/shou-lian-shi-yong-rubygems/"/>
    <updated>2012-03-11T16:01:00+08:00</updated>
    <id>http://khua.github.com/blog/2012/03/11/shou-lian-shi-yong-rubygems</id>
    <content type="html"><![CDATA[<p>RubyGems是Ruby的插件管理系统，可以轻松安装及管理Ruby函式库。可以在RubyGems上找到所有开源套件，另外，如果想找到Ruby或Rails有哪些好用的插件，也可以浏览看看<a href="https://www.ruby-toolbox.com/">The Ruby Toolbox</a>，会按照插件的热门程度排序。</p>

<h3>常见指令</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem -v 查看RubyGems的版本
</span><span class='line'>gem update --system 升级RubyGems的版本
</span><span class='line'>gem install gem_name 安装某个插件
</span><span class='line'>gem install -v x.x.x gem_name 安装指定版本的插件
</span><span class='line'>gem list 列出安装的套件
</span><span class='line'>gem update gem_name 更新某个插件
</span><span class='line'>gem update 更新所有的插件
</span><span class='line'>gem uninstall gem_name 删除某个插件</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>另外，在安装插件时，系统会默认安装该插件的RDoc和ri文件，如果不希望安装这些该件，可在安装时使用<code>--no-ri --no-rdoc</code>参数：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install gem_name --no-ri --no-rdoc
</span></code></pre></td></tr></table></div></figure>


<p>也可以在用户目录<code>~</code>下，新建一个<code>.gemrc</code>文档，内容如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem: --no-ri --no-rdoc</span></code></pre></td></tr></table></div></figure>


<p>系统将默认不安装RDoc和ri文件。</p>

<h3>国内RubyGems镜像</h3>

<p>如果服务器在国内，安装所需的gems将是异常痛苦的体验，所幸的是，现在可以使用淘宝的镜像：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem sources --remove https://rubygems.org/
</span><span class='line'>$ gem sources -a http://ruby.taobao.org/
</span><span class='line'>$ gem sources -l</span></code></pre></td></tr></table></div></figure>


<p>如果显示：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>*** CURRENT SOURCES ***
</span><span class='line'>
</span><span class='line'>http://ruby.taobao.org</span></code></pre></td></tr></table></div></figure>


<p>就说明更改成功啦，你现在可以从国内镜像安装rugy gems啦。详细内容可参考 <a href="ruby.taobao.org">Rubygems镜像</a></p>

<p>如果使用<code>Bundler</code>管理Ruby Gems，可以修改Gemfile：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>source 'http://ruby.taobao.org/'
</span><span class='line'>
</span><span class='line'>gem 'rails', '3.2.2'
</span><span class='line'>... ... ...</span></code></pre></td></tr></table></div></figure>


<h3>建立和分享Ruby Gems</h3>

<p>根据官方的简介：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem update --system #Update to the latest RubyGems version
</span><span class='line'>gem build foo.gemspec #Build your gem
</span><span class='line'>gem push foo-1.0.0.gem #Deploy your gem instantly</span></code></pre></td></tr></table></div></figure>


<p>详请见后续文章：如何建立自己的Rubygem</p>

<h3>Top 50 Rubygems</h3>

<div><script src='https://gist.github.com/2015501.js?file='></script>
<noscript><pre><code>Count  Gem
7570    rack
7444    rake
7425    rails
7424    activesupport
7421    bundler
7412    actionpack
7410    actionmailer
7409    activerecord
7397    activeresource
7326    mime-types
7274    builder
6787    i18n
6547    rack-test
6527    tzinfo
6484    erubis
6447    treetop
6433    polyglot
6386    mail
6340    thor
6269    railties
6268    rack-mount
6266    activemodel
6261    arel
5958    abstract
5274    will_paginate
4935    newrelic_rpm
4597    nokogiri
4458    haml
4222    json
3703    bcrypt-ruby
3389    paperclip
3372    daemons
3335    warden
3330    devise
3224    aws-s3
2939    xml-simple
2931    hoptoad_notifier
2834    rest-client
2501    multi_json
2482    jquery-rails
2464    addressable
2392    fastercsv
2377    delayed_job
2343    oauth
2255    crack
2189    authlogic
2168    net-ssh
2161    pg
2090    orm_adapter
2036    rdoc</code></pre></noscript></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[instance_eval与class_eval的区别]]></title>
    <link href="http://khua.github.com/blog/2012/03/04/instance-evalyu-class-evalde-qu-bie/"/>
    <updated>2012-03-04T20:52:00+08:00</updated>
    <id>http://khua.github.com/blog/2012/03/04/instance-evalyu-class-evalde-qu-bie</id>
    <content type="html"><![CDATA[<p>最近在看<strong>《Metaprogramming Ruby》</strong>的时候，看到代码块一章，在网上看到一篇介绍instance_eval与class_eval的文章：</p>

<h3>instance_eval</h3>

<p>首先从名字可以得到的信息是，<strong>instance_eval</strong>的调用者receiver必须是一个<strong>实例instance</strong>，而在instance_eval block的内部，self即为receiver实例本身。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">obj_instance</span><span class="o">.</span><span class="n">instance_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">self</span>  <span class="c1"># =&gt; obj_instance</span>
</span><span class='line'>  <span class="c1"># current class =&gt; obj_instance&#39;s singleton class</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>根据这个定义，如果在一个实例上调用了instance_eval，就可以在其中定义该实例的单态函数 singleton_method</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="n">A</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">instance_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">self</span>  <span class="c1"># =&gt; a</span>
</span><span class='line'>  <span class="c1"># current class =&gt; a&#39;s singleton class</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method1</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;this is a singleton method of instance a&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">method1</span>
</span><span class='line'><span class="c1">#=&gt; this is a singleton method of instance a</span>
</span><span class='line'>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="n">A</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">b</span><span class="o">.</span><span class="n">method1</span>
</span><span class='line'><span class="c1">#=&gt;NoMethodError: undefined method `method1&#39; for #&lt;A:0x10043ff70&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>同样，因为<strong>类class本身也是Class类的一个实例</strong>，instance_eval也可以用在类上，这个时候就可以在其中定义该类的singleton_method，即为该类的类函数。</p>

<p>换句话说，可以用instance_eval来定义类函数class method，这比较容易混淆，需要搞清楚。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">instance_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">self</span>  <span class="c1"># =&gt; A</span>
</span><span class='line'>  <span class="c1"># current class =&gt; A&#39;s singleton class</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method1</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;this is a singleton method of class A&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">method1</span>
</span><span class='line'><span class="c1">#=&gt; this is a singleton method of class A</span>
</span><span class='line'><span class="nb">class_eval</span>
</span></code></pre></td></tr></table></div></figure>


<h3>class_eval</h3>

<p>再来看<strong>class_eval</strong>，首先从名字可以得到的信息是，class_eval的调用者receiver必须是一个<strong>类</strong>，而在class_eval block的内部，self即为receiver类本身。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">self</span>  <span class="c1"># =&gt; A</span>
</span><span class='line'>  <span class="c1"># current class =&gt; A</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>根据这个定义，如果在一个类上调用了class_eval，就可以在其中定义该类的实例函数 instance_method</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="n">A</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">method1</span>
</span><span class='line'><span class="c1">#=&gt; NoMethodError: undefined method `method1&#39; for #&lt;A:0x10043ff70&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">self</span>  <span class="c1"># =&gt; A</span>
</span><span class='line'>  <span class="c1"># current class =&gt; A</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method1</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;this is a instance method of class A&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">method1</span>
</span><span class='line'><span class="c1">#=&gt; this is a instance method of class A</span>
</span></code></pre></td></tr></table></div></figure>


<p>换句话说，可以用class_eval来定义实例函数instance method，这也比较容易混淆，需要搞清楚。</p>

<h3>总结</h3>

<p>instance_eval必须由instance来调用，可以用来定义单态函数singleton_methods</p>

<p>class_eval必须是由class来调用，可以用来定义实例函数instance_methods</p>
]]></content>
  </entry>
  
</feed>
